<?xml version="1.0" encoding="UTF-8"?>
<!--
######################################################################
# (c) 2014 Cisco and/or its affiliates. All rights reserved.
# 
# This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
# Any dependent libraries supplied by third parties are provided under their own open source licenses as 
# described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
# part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
# csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
# csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
# optional version number) are provided as a convenience, but are covered under the licensing for the 
# Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
# through a valid license for that product.
# 
# This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
# Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
# 
######################################################################

*******************************************************
**** IMPORTANT - PLEASE READ REGARDING COMPILATION ****
*******************************************************
	To build the 6.2 jars, the properties java build path must be set for src62 and lib62
	
	1. Right click on the PDTool project, select properties, Select Java Build Path
		SOURCE: click on "Source" tab
			Select PDTool/src70 and click "Remove" tab to remove PDTool/src70
			Click "Add folder" and select src62 and click OK

	2. LIBRARIES: click on "Libraries" tab
			Select lib70 and click the "Remove" button to remove lib70
			Click "Add Library" button
			Select "User Library" and click Next
			Select lib62 library and click finish
			Click OK to 
	3. Clean the project
	4. Execute the build62.xml
-->
<project name="PDTool" default="default" basedir=".">

	<!-- change the release number from r1 to r2, etc. if there is more than one build in a day. -->
	<property name="ver" value="62"/>
	<property name="verRelease" value="6.2"/>
	<property name="relNum" value="r1"/>

	<property name="project-name" value="PDTool"/>
	<property name="src" value="src:src${ver}"/>
	<property name="build" location="build"/>
	<property name="bin" location="bin"/>
	<property name="dist" location="dist"/>
	<property name="ext" location="ext"/>
	<property name="lib" value="libcommon"/>
	<property name="libver" value="lib${ver}"/>
	<property name="licenses" location="licenses"/>
	<property name="regression" location="regression"/>
	<property name="resources" location="resources"/>
	<property name="security" location="security"/>
	<property name="docs" location="PDToolDocs/docs"/>
	<property name="project-PDToolModules" value="PDToolModules"/>
	<property name="pdtool-target" value="PDTool${ver}"/>
	<property name="pdtoolstudio-target" value="PDToolStudio${ver}"/>
	<property name="rel" value="../PDToolRelease/${verRelease}"/>
	<property name="regression_rel" location="../PDToolRelease/regression"/>
	<property name="regression-target" value="PDToolRegression"/>

	<path id="project.class.path">
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${libver}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="ext/ant/lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="compile the source " >
		<!-- Compile the java code from ${src} into ${build} -->
		<javac source="1.6" target="1.6" srcdir="${src}" destdir="${build}" 
			debug="true" debuglevel="lines,vars,source">
	      <classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="dist-jar" depends="clean,compile" description="generate the distribution">

		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/${project-name}${ver}.jar" basedir="${build}" />

		<delete dir="${build}" />
	</target>

	<!-- Create the PDTool distribution zip file. -->
	<target name="dist" depends="dist-jar">

		<!-- Copy ExecutePDTool.bat into the /bin directory so that it can be used for testing. -->
		<copy todir="${bin}">
		    <fileset dir="${bin}/PDTool">
		        <include name="ExecutePDTool.bat"/>
		    </fileset>
		</copy>

		<tstamp>
		  <format property="TODAY_US"
		          pattern="yyyy-MM-dd"
		          locale="en,US"/>
		</tstamp>

		<!-- 
		***************************************************************
		Create PDTool distribution zip file.
		***************************************************************
		-->
		<!-- Create the PD Tool (command-line / Ant) distribution zip file. -->
		<mkdir dir="${pdtool-target}"/>
		<mkdir dir="${pdtool-target}/bin"/>
		<mkdir dir="${pdtool-target}/dist"/>
		<mkdir dir="${pdtool-target}/ext/ant/bin"/>
		<mkdir dir="${pdtool-target}/ext/ant/etc"/>
		<mkdir dir="${pdtool-target}/ext/ant/lib"/>
		<mkdir dir="${pdtool-target}/lib"/>
		<mkdir dir="${pdtool-target}/lib/endorsed"/>
		<mkdir dir="${pdtool-target}/licenses"/>
		<mkdir dir="${pdtool-target}/resources/ant"/>
		<mkdir dir="${pdtool-target}/resources/carfiles"/>
		<mkdir dir="${pdtool-target}/resources/config"/>
		<mkdir dir="${pdtool-target}/resources/modules"/>
		<mkdir dir="${pdtool-target}/resources/modules/generated"/>
		<mkdir dir="${pdtool-target}/resources/modules/lab"/>
		<mkdir dir="${pdtool-target}/resources/modules/test"/>
		<mkdir dir="${pdtool-target}/resources/plans"/>
		<mkdir dir="${pdtool-target}/resources/schema"/>
		<mkdir dir="${pdtool-target}/resources/vcs_initial"/>
		<mkdir dir="${pdtool-target}/security"/>

		<!-- Copy the generated Schema HTML file and images directory in preparation for zipping the distribution. -->
		<copy todir="${pdtool-target}">
		    <fileset dir="${rel}">
		        <include name="PDTool-${verRelease}-${TODAY_US}.${relNum}.txt"/>
		    </fileset>
		</copy>

		<copy todir="${pdtool-target}/docs">
		    <fileset dir="${project-PDToolModules}/docs">
		        <include name="PDToolModules.xsd.html"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/docs/images">
		    <fileset dir="${project-PDToolModules}/docs/images">
		        <include name="*.jpg"/>
		    </fileset>
		</copy>

		<copy todir="${pdtool-target}/bin">
		    <fileset dir="${bin}/PDTool">
		        <include name="*.bat"/>
		        <include name="*.sh"/>
		        <include name="*.properties"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/dist">
		    <fileset dir="${dist}">
		        <include name="*${ver}.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/docs">
		    <fileset dir="${docs}">
		        <include name="*.pdf"/>
		        <include name="*.ppt"/>
		        <include name="*.pptx"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/ext">
		    <fileset dir="${ext}">
		        <include name="**"/>
		    </fileset>
		</copy>
		<!-- Copy from common lib: /lib -->
		<copy todir="${pdtool-target}/lib">
		    <fileset dir="${lib}">
		        <include name="*.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/lib">
		    <fileset dir="${lib}">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<!-- Copy from version lib [lib62,lib70]: /libxx -->
		<copy todir="${pdtool-target}/lib">
		    <fileset dir="${libver}">
		        <include name="*.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/lib">
		    <fileset dir="${libver}">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/lib/endorsed">
		    <fileset dir="${libver}/endorsed">
		        <include name="*.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/lib/endorsed">
		    <fileset dir="${libver}/endorsed">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/licenses">
		    <fileset dir=".">
		        <include name="LICENSE"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/licenses">
		    <fileset dir="${licenses}">
		        <include name="**"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/ant">
		    <fileset dir="${resources}/ant">
		        <include name="*.xml"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/carfiles">
		    <fileset dir="${resources}/carfiles">
		        <include name="TEST*.car"/>
		        <include name="Regression*.car"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/config">
		    <fileset dir="${resources}/config">
		        <include name="application*.xml"/>
		        <include name="log*.properties"/>
			    <include name="deploy.properties"/>
			    <include name="deploy_svn*.properties"/>
			    <include name="deploy_cvs*.properties"/>
				<include name="deploy_tfs*.properties"/>
			    <include name="deploy_p4*.properties"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/modules">
		    <fileset dir="${resources}/modules">
		        <include name="*.xml"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/modules/generated">
		    <fileset dir="${resources}/modules/generated">
		        <include name="*.xml"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/modules/lab">
		    <fileset dir="${resources}/modules/lab">
		        <include name="*.xml"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/modules/test">
		    <fileset dir="${resources}/modules/test">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/plans">
		    <fileset dir="${resources}/plans">
		        <include name="*.dp"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/schema">
		    <fileset dir="${resources}/schema">
		        <include name="*.xsd"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/resources/vcs_initial">
		    <fileset dir="${resources}/vcs_initial">
		        <include name="**"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/security">
		    <fileset dir="${security}">
		        <include name="cis_studio_truststore.jks"/>
		    </fileset>
		</copy>
		<copy todir="${pdtool-target}/security">
		    <fileset dir="${security}">
		        <include name="java.policy"/>
		    </fileset>
		</copy>
		
		<!-- Create the PDTool zip file -->
		<zip destfile="${rel}/PDTool-${verRelease}-${TODAY_US}.${relNum}.zip" basedir="." includes="${pdtool-target}/**" />

		<!-- Delete the staging directory used to create the zip file. -->
		<delete dir="${pdtool-target}"/>
		
		<!-- 
		***************************************************************
		Create PDTool Studio distribution zip file.
		***************************************************************
		-->
		<!-- Create the PD Tool Studio distribution zip file. -->
		<mkdir dir="${pdtoolstudio-target}"/>
		<mkdir dir="${pdtoolstudio-target}/bin"/>
		<mkdir dir="${pdtoolstudio-target}/bin_novars"/>
		<mkdir dir="${pdtoolstudio-target}/bin_host1"/>
		<mkdir dir="${pdtoolstudio-target}/bin_host2"/>
		<mkdir dir="${pdtoolstudio-target}/dist"/>
		<mkdir dir="${pdtoolstudio-target}/docs/VCS_Studio"/>
		<mkdir dir="${pdtoolstudio-target}/lib"/>
		<mkdir dir="${pdtoolstudio-target}/lib/endorsed"/>
		<mkdir dir="${pdtoolstudio-target}/licenses"/>
		<mkdir dir="${pdtoolstudio-target}/logs"/>
		<mkdir dir="${pdtoolstudio-target}/resources/config"/>
		<mkdir dir="${pdtoolstudio-target}/resources/vcs_initial"/>
		<mkdir dir="${pdtoolstudio-target}/security"/>
		
		<copy todir="${pdtoolstudio-target}">
		    <fileset dir="${rel}">
		        <include name="PDToolStudio-${verRelease}-${TODAY_US}.${relNum}.txt"/>
		    </fileset>
		</copy>
		
		<copy todir="${pdtoolstudio-target}/bin">
		    <fileset dir="${bin}/PDToolStudio">
		        <include name="*.bat"/>
		        <include name="*.sh"/>
		        <include name="*.properties"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/bin_novars">
		    <fileset dir="${bin}/PDToolStudio_bin_novars">
		        <include name="*.bat"/>
		        <include name="*.sh"/>
		        <include name="*.properties"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/bin_host1">
		    <fileset dir="${bin}/PDToolStudio_bin_host1">
		        <include name="*.bat"/>
		        <include name="*.sh"/>
		        <include name="*.properties"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/bin_host2">
		    <fileset dir="${bin}/PDToolStudio_bin_host2">
		        <include name="*.bat"/>
		        <include name="*.sh"/>
		        <include name="*.properties"/>
		    </fileset>
		</copy>
		
		<copy todir="${pdtoolstudio-target}/dist">
		    <fileset dir="${dist}">
		        <include name="*${ver}.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/docs">
		    <fileset dir="${docs}">
		        <include name="VCS_Studio/*"/>
		    </fileset>
		</copy>
		<!-- Copy from common lib: /lib -->
		<copy todir="${pdtoolstudio-target}/lib">
		    <fileset dir="${lib}">
		        <include name="*.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/lib">
		    <fileset dir="${lib}">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<!-- Copy from version lib [lib62,lib70]: /libxx -->
		<copy todir="${pdtoolstudio-target}/lib">
		    <fileset dir="${libver}">
		        <include name="*.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/lib">
		    <fileset dir="${libver}">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/lib/endorsed">
		    <fileset dir="${libver}/endorsed">
		        <include name="*.jar"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/lib/endorsed">
		    <fileset dir="${libver}/endorsed">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/licenses">
		    <fileset dir=".">
		        <include name="LICENSE"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/licenses">
		    <fileset dir="${licenses}">
		        <include name="**"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/resources/config">
		    <fileset dir="${resources}/config">
		        <include name="application*.xml"/>
		        <include name="log*.properties"/>
			    <include name="studio.properties"/>
			    <include name="studio*example.properties"/>
			    <include name="studio*multi_host.properties"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/resources/vcs_initial">
		    <fileset dir="${resources}/vcs_initial">
		        <include name="**"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/security">
		    <fileset dir="${security}">
		        <include name="cis_studio_truststore.jks"/>
		    </fileset>
		</copy>
		<copy todir="${pdtoolstudio-target}/security">
		    <fileset dir="${security}">
		        <include name="java.policy"/>
		    </fileset>
		</copy>
		
		<!-- Create the PDToolStudio zip file -->
		<zip destfile="${rel}/PDToolStudio-${verRelease}-${TODAY_US}.${relNum}.zip" basedir="." includes="${pdtoolstudio-target}/**" />
		
		<!-- Delete the staging directory used to create the zip file. -->
		<delete dir="${pdtoolstudio-target}"/>

		<!-- 
		***************************************************************
		Create Regression distribution zip file.
		***************************************************************
		-->
		<!-- Create the Regression zip file target directories -->
		<mkdir dir="${regression-target}"/>
		<mkdir dir="${regression-target}/carfiles"/>
		<mkdir dir="${regression-target}/config"/>
		<mkdir dir="${regression-target}/config_lists"/>
		<mkdir dir="${regression-target}/modules"/>
		<mkdir dir="${regression-target}/modules/generated"/>
		<mkdir dir="${regression-target}/modules/test"/>
		<mkdir dir="${regression-target}/plan_lists"/>
		<mkdir dir="${regression-target}/plans"/>
		<!-- Copy files from the regression source to the regression target directories -->
		<copy todir="${regression-target}">
		    <fileset dir="${regression}">
		        <include name="*.txt"/>
		        <include name="*.bat"/>
		        <include name="*.sh"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/carfiles">
		    <fileset dir="${regression}/carfiles">
		        <include name="*.car"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/config">
		    <fileset dir="${regression}/config">
		        <include name="*.car"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/config">
		    <fileset dir="${regression}/config">
		        <include name="*.properties"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/config_lists">
		    <fileset dir="${regression}/config_lists">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/modules/test">
		    <fileset dir="${regression}/modules/test">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/modules">
		    <fileset dir="${regression}/modules">
		        <include name="*.xml"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/plan_lists">
		    <fileset dir="${regression}/plan_lists">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/plans">
		    <fileset dir="${regression}/plans">
		        <include name="*.dp"/>
		    </fileset>
		</copy>
		<!-- Create the PDToolRegression zip file -->
		<zip destfile="${regression_rel}/regression-${TODAY_US}.zip" basedir="." includes="${regression-target}/**" />
		<delete dir="${regression-target}"/>

	</target>
	
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
	</target>

	<target name="default" depends="clean,dist" description="Distribute CIS Deploy tool libs"/>
</project>
